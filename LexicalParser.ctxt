#BlueJ class context
comment0.target=LexicalParser
comment0.text=\r\n\ LexicalParser\ is\ responsible\ for\ turning\ user\ input\ into\ an\ initial\ AST\r\n
comment1.params=symbol
comment1.target=boolean\ IsSpecialCharacter(char)
comment1.text=\r\n\ Check\ is\ a\ character\ is\ a\ special\ character\r\n\ @param\ symbol\ -\ the\ character\ to\ be\ checked\r\n
comment2.params=lastChar
comment2.target=boolean\ IsInvalidClosing(char)
comment2.text=\r\n\ Checks\ if\ a\ character\ is\ an\ Invalid\ closing\r\n\ @param\ lastChar\ -\ the\ character\ to\ be\ checked\r\n
comment3.params=lambdaExpression
comment3.target=void\ Tokenize(java.lang.String)
comment3.text=\r\n\ This\ is\ the\ method\ that\ turns\ the\ lambda\ expression\ into\ an\ AST.\ \r\n\ @param\ lambdaExpression\ the\ user\ input\ string\r\n\ @throws\ LexerError\ If\ the\ input\ is\ not\ a\ valid\ lambda\ calculus\r\n\ \ expression\r\n
comment4.params=lambdaExpression
comment4.target=LexicalParser(java.lang.String)
comment4.text=\r\n\ Construct\ for\ lexicalParser,\ it\ initializes\ the\ special\ characters\ and\ \r\n\ calls\ Tokenize.\ \r\n\ @param\ lambdaExpression\ -\ user\ input\r\n
numComments=5
